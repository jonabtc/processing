# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AUTODIRS = @AUTODIRS@
CC = @CC@
CXX = @CXX@
FT2_CFLAGS = @FT2_CFLAGS@
FT2_CONFIG = @FT2_CONFIG@
FT2_LIBS = @FT2_LIBS@
HAVE_LIB = @HAVE_LIB@
LIB = @LIB@
LTLIB = @LTLIB@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
PERL = @PERL@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
VERSION = @VERSION@
perl_embed_ccflags = @perl_embed_ccflags@
perl_embed_ldflags = @perl_embed_ldflags@

bin_PROGRAMS = openmortal
openmortal_SOURCES =  	Audio.cpp         FlyingChars.cpp  MortalNetworkImpl.cpp       sge_primitives.cpp 	Backend.cpp       Game.cpp         OnlineChat.cpp              sge_surface.cpp 	Background.cpp    GameOver.cpp     PlayerSelectController.cpp  sge_tt_text.cpp 	Chooser.cpp       gfx.cpp          PlayerSelect.cpp            State.cpp 	common.cpp        Joystick.cpp     PlayerSelectView.cpp        TextArea.cpp 	Demo.cpp          main.cpp         RlePack.cpp 	FighterStats.cpp  menu.cpp         sge_bm_text.cpp


EXTRA_DIST = $(openmortal_SOURCES) 	Audio.h       Event.h         menu.h                    PlayerSelectView.h  sge_tt_text.h 	Backend.h     FighterEnum.h   MortalNetwork.h           RlePack.h           State.h 	Background.h  FighterStats.h  MortalNetworkImpl.h       sge_bm_text.h       TextArea.h 	Chooser.h     FlyingChars.h   MszPerl.h                 sge_config.h 	common.h      Game.h          OnlineChat.h              sge_internal.h 	Demo.h        gfx.h           PlayerSelectController.h  sge_primitives.h 	DrawRle.h     Joystick.h      PlayerSelect.h            sge_surface.h


CXXFLAGS = @CXXFLAGS@ -DDATADIR=\"${pkgdatadir}\" -Wall
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
openmortal_OBJECTS =  Audio.o FlyingChars.o MortalNetworkImpl.o \
sge_primitives.o Backend.o Game.o OnlineChat.o sge_surface.o \
Background.o GameOver.o PlayerSelectController.o sge_tt_text.o \
Chooser.o gfx.o PlayerSelect.o State.o common.o Joystick.o \
PlayerSelectView.o TextArea.o Demo.o main.o RlePack.o FighterStats.o \
menu.o sge_bm_text.o
openmortal_LDADD = $(LDADD)
openmortal_DEPENDENCIES = 
openmortal_LDFLAGS = 
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(openmortal_SOURCES)
OBJECTS = $(openmortal_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

openmortal: $(openmortal_OBJECTS) $(openmortal_DEPENDENCIES)
	@rm -f openmortal
	$(CXXLINK) $(openmortal_LDFLAGS) $(openmortal_OBJECTS) $(openmortal_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
Audio.o: Audio.cpp Audio.h State.h common.h
Backend.o: Backend.cpp common.h Backend.h FighterEnum.h Audio.h State.h \
	MszPerl.h
Background.o: Background.cpp Background.h sge_surface.h sge_internal.h \
	sge_config.h gfx.h common.h
Chooser.o: Chooser.cpp Chooser.h FighterEnum.h common.h PlayerSelect.h \
	Backend.h Event.h State.h gfx.h sge_primitives.h sge_internal.h \
	sge_config.h
common.o: common.cpp common.h State.h Joystick.h Event.h
Demo.o: Demo.cpp FlyingChars.h sge_bm_text.h sge_internal.h sge_config.h \
	State.h gfx.h common.h Backend.h FighterEnum.h RlePack.h \
	FighterStats.h Demo.h Event.h ../config.h
FighterStats.o: FighterStats.cpp PlayerSelect.h FighterEnum.h common.h \
	FlyingChars.h sge_bm_text.h sge_internal.h sge_config.h \
	sge_tt_text.h gfx.h RlePack.h Backend.h State.h FighterStats.h \
	Demo.h MszPerl.h
FlyingChars.o: FlyingChars.cpp FlyingChars.h sge_bm_text.h \
	sge_internal.h sge_config.h sge_surface.h common.h
Game.o: Game.cpp sge_surface.h sge_internal.h sge_config.h \
	sge_primitives.h sge_bm_text.h Event.h PlayerSelect.h \
	FighterEnum.h common.h Background.h gfx.h Backend.h RlePack.h \
	State.h Game.h Audio.h MortalNetwork.h MszPerl.h
GameOver.o: GameOver.cpp PlayerSelect.h FighterEnum.h common.h gfx.h \
	Backend.h State.h RlePack.h Audio.h Event.h
gfx.o: gfx.cpp sge_tt_text.h sge_internal.h sge_config.h sge_surface.h \
	common.h gfx.h State.h Event.h
Joystick.o: Joystick.cpp Event.h common.h Joystick.h
main.o: main.cpp ../config.h PlayerSelect.h FighterEnum.h common.h \
	sge_tt_text.h sge_internal.h sge_config.h sge_bm_text.h \
	sge_surface.h gfx.h Audio.h RlePack.h Backend.h State.h \
	FighterStats.h Demo.h MortalNetwork.h
menu.o: menu.cpp sge_primitives.h sge_internal.h sge_config.h menu.h \
	gfx.h State.h common.h Audio.h Backend.h FighterEnum.h \
	sge_tt_text.h sge_surface.h MortalNetwork.h Joystick.h
MortalNetworkImpl.o: MortalNetworkImpl.cpp MortalNetworkImpl.h \
	MortalNetwork.h FighterEnum.h State.h PlayerSelect.h common.h \
	../config.h
OnlineChat.o: OnlineChat.cpp OnlineChat.h TextArea.h State.h menu.h \
	Audio.h sge_tt_text.h sge_internal.h sge_config.h gfx.h \
	common.h ../config.h Event.h
PlayerSelect.o: PlayerSelect.cpp PlayerSelect.h FighterEnum.h common.h \
	PlayerSelectController.h sge_primitives.h sge_internal.h \
	sge_config.h sge_surface.h Audio.h sge_bm_text.h gfx.h \
	RlePack.h Backend.h State.h MortalNetwork.h Chooser.h \
	sge_tt_text.h TextArea.h Event.h
PlayerSelectController.o: PlayerSelectController.cpp \
	PlayerSelectController.h FighterEnum.h common.h \
	PlayerSelectView.h State.h PlayerSelect.h Chooser.h \
	MortalNetwork.h Backend.h Event.h Audio.h TextArea.h \
	sge_tt_text.h sge_internal.h sge_config.h
PlayerSelectView.o: PlayerSelectView.cpp sge_tt_text.h sge_internal.h \
	sge_config.h sge_bm_text.h sge_primitives.h RlePack.h \
	FighterEnum.h PlayerSelectView.h State.h PlayerSelect.h \
	common.h Chooser.h TextArea.h Backend.h gfx.h
RlePack.o: RlePack.cpp RlePack.h FighterEnum.h gfx.h common.h DrawRle.h
sge_bm_text.o: sge_bm_text.cpp sge_surface.h sge_internal.h sge_config.h \
	sge_bm_text.h sge_tt_text.h
sge_primitives.o: sge_primitives.cpp sge_primitives.h sge_internal.h \
	sge_config.h sge_surface.h
sge_surface.o: sge_surface.cpp sge_surface.h sge_internal.h sge_config.h
sge_tt_text.o: sge_tt_text.cpp sge_surface.h sge_internal.h sge_config.h \
	sge_primitives.h sge_tt_text.h
State.o: State.cpp ../config.h gfx.h common.h State.h Backend.h \
	FighterEnum.h MszPerl.h
TextArea.o: TextArea.cpp TextArea.h sge_surface.h sge_internal.h \
	sge_config.h sge_tt_text.h sge_primitives.h gfx.h common.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# set the include path found by configure
#INCLUDES= $(all_includes)

# the library search path.
#msz_LDFLAGS = $(all_libraries) 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
